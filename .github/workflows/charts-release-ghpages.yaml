name: "Charts: Release to GitHub pages"

on:
  workflow_call:
    inputs:
      charts:
        description: >
          Json encoded list of Helm charts to release.
          Defaults to releasing everything.
        default: "[]"
        required: false
        type: string
    secrets:
      BOT_APP_ID:
        required: true
      BOT_APP_PRIVATE_KEY:
        required: true

env:
  HELM_VERSION: 3.17.2

jobs:
  release-charts:
    name: Release charts
    #runs-on: ["self-hosted", "X64"]
    runs-on: ubuntu-latest
    steps:
      - name: Workaround
        run: export OPENSSL_CONF=/dev/null
      - name: Get GitHub API token
        id: get-app-token
        uses: getsentry/action-github-app-token@v3.0.0
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: Checkout charts branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ steps.get-app-token.outputs.token }}
          path: "src"
          fetch-depth: 0

      - name: Checkout gh-pages branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ steps.get-app-token.outputs.token }}
          path: "dest"
          ref: "gh-pages"
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.12.0
        with:
          setup-tools: |
            helmv3
          helm: "${{ env.HELM_VERSION }}"

      - name: Package Helm Charts
        shell: bash
        env:
          SRC_DIR: "src/charts"
          DEST_DIR: "dest"
          REGISTRY: oci://ghcr.io/${{ github.repository_owner }}/charts
        run: |
          CHARTS=( $(yq --null-input e '${{ inputs.charts }}[]' ) )

          for CHART in "${CHARTS[@]}" ; do
            mapfile -t CHART_PATH_PARTS < <(echo "$CHART" | tr '/' '\n')

            export VERSION=$(yq .version "${SRC_DIR}/${CHART}/Chart.yaml")

            helm dep up "${SRC_DIR}/${CHART}"
            helm package "${SRC_DIR}/${CHART}" -u -d "${DEST_DIR}"
            helm push "${DEST_DIR}/${CHART}-${VERSION}.tgz" "${REGISTRY}"
          done

      - name: Update chart index
        shell: bash
        working-directory: dest
        run: |
          helm repo index . --url https://micheelengronne.github.io/webhook-dnsendpoint/

      - name: Commit changes
        shell: bash
        working-directory: dest
        run: |
          git config user.name "terminator-bot[bot]"
          git config user.email "terminator-bot[bot]@users.noreply.github.com"
          git add $(git ls-files -o --exclude-standard)
          git add index.yaml
          git commit -m "Updated from ref: $GITHUB_SHA"
          git push